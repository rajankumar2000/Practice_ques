#include<bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right; 
};

Node* createNode(int data){
    Node* newNode=new Node();
    newNode->data=data;
    newNode->left=newNode->right=NULL;
   return newNode;
}
// void preorder(Node* temp){
//     if (temp == NULL)
//         return;
//     cout << temp->data << ' ';
//     preorder(temp->left);
    
//     preorder(temp->right);
    
// }
void printLevelOrder(Node* root){
    if(root==NULL)return;

    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        Node* node=q.front();
        cout<<node->data<<" ";
        q.pop();
        if(node->left!=NULL){
            q.push(node->left);
        }
        if(node->right!=NULL){
            q.push(node->right);
        }
    }
}
int main(){
    Node* root=createNode(10);
    root->left=createNode(11);
    root->left->left=createNode(12);
    root->right=createNode(13);
    root->right->left=createNode(14);
    root->right->right=createNode(15);

printLevelOrder(root);

return 0;
}
